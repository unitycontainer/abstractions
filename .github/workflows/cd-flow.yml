name:  Continuous Deployment

on:
  push:
    branches:
      - 'release/**'    
    # paths:
    #   - 'src/*'

jobs:

  build:
    runs-on: windows-latest
    env:
      PackageName:       'Unity.Abstractions'
      PackageOutputPath: '${{ github.workspace }}\package'

    steps:
    
    - name: GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Label Fixed Issues
      uses: gh-bot/fix-labeler@master        

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.x'

    - name: Git Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.9
      with:
        useConfigFile: true
        configFilePath: '.github\GitVersion.yml'

    - name: Build
      env:
        Version: '${{ steps.gitversion.outputs.fullSemVer }}'
      run: | 
        dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ github.workspace }}\src\${{ env.PackageName }}.csproj
        dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ github.workspace }}\tests\${{ env.PackageName }}.Tests.csproj

    - name: Test
      run: | 
        dotnet test ${{ github.workspace }}\tests\${{ env.PackageName }}.Tests.csproj

    - name: Publish Local Package
      run: |
        dotnet nuget add source "https://nuget.pkg.github.com/unitycontainer/index.json" -n github -u unitycontainer -p ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text
        dotnet nuget push '${{ env.PackageOutputPath }}\*' --source github

    - uses: actions/delete-package-versions@v1
      name: Remove old packages
      with:
        package-name: ${{ env.PackageName }}
        num-old-versions-to-delete: 1
        token: ${{ secrets.GITHUB_TOKEN }}